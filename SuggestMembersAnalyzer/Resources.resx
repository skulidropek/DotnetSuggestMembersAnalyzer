<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>

  <data name="MemberNotFoundTitle" xml:space="preserve">
    <value>Member not found</value>
  </data>
  <data name="MemberNotFoundMessageFormat" xml:space="preserve">
    <value>Member '{0}' does not exist on type in '{1}', Did you mean: {2}</value>
  </data>
  <data name="MemberNotFoundDescription" xml:space="preserve">
    <value>This member does not exist on the given type.</value>
  </data>
  
  <data name="VariableNotFoundTitle" xml:space="preserve">
    <value>Variable not found</value>
  </data>
  <data name="VariableNotFoundMessageFormat" xml:space="preserve">
    <value>{0} '{1}' does not exist, Did you mean: {2}</value>
  </data>
  <data name="VariableNotFoundDescription" xml:space="preserve">
    <value>This variable does not exist in the current scope.</value>
  </data>
  
  <data name="NamespaceNotFoundTitle" xml:space="preserve">
    <value>Namespace not found</value>
  </data>
  <data name="NamespaceNotFoundMessageFormat" xml:space="preserve">
    <value>Namespace '{0}' does not exist, Did you mean: {1}</value>
  </data>
  <data name="NamespaceNotFoundDescription" xml:space="preserve">
    <value>This namespace does not exist.</value>
  </data>

  <data name="NamedArgumentNotFoundTitle" xml:space="preserve">
    <value>Named argument not found</value>
  </data>
  <data name="NamedArgumentNotFoundMessageFormat" xml:space="preserve">
    <value>Parameter '{1}' does not exist for {0} '{2}', Available signatures: {3}</value>
  </data>
  <data name="NamedArgumentNotFoundDescription" xml:space="preserve">
    <value>This named argument does not exist for the method or constructor.</value>
  </data>
  
  <data name="UseNameofInsteadOfStringTitle" xml:space="preserve">
    <value>Use nameof instead of string literal</value>
  </data>
  <data name="UseNameofInsteadOfStringMessageFormat" xml:space="preserve">
    <value>Nameof '{0}' does not exist, Did you mean: {1}</value>
  </data>
  <data name="UseNameofInsteadOfStringDescription" xml:space="preserve">
    <value>Using nameof() is more refactoring-friendly than string literals for referencing code elements.</value>
  </data>
  
  <data name="InvalidNameofArgumentTitle" xml:space="preserve">
    <value>Invalid nameof argument</value>
  </data>
  <data name="InvalidNameofArgumentMessageFormat" xml:space="preserve">
    <value>Argument '{0}' in nameof() does not exist</value>
  </data>
  <data name="InvalidNameofArgumentDescription" xml:space="preserve">
    <value>The argument used in the nameof() operator does not exist in the current scope.</value>
  </data>
</root> 